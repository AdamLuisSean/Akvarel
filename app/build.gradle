/*
 * MIT License
 *
 * Copyright (c) 2018 Alexey Shtanko
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'deploygate'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

def ext = rootProject.ext

android {
    compileSdkVersion ext.compileSdkVersion

    defaultConfig {
        applicationId "me.shtanko.akvarel"
        minSdkVersion ext.minSdkVersion
        targetSdkVersion ext.targetSdkVersion
        versionCode ext.commitsCount
        versionName "1.0.0"
        //multiDexEnabled true
    }

    // When building Android App Bundles, the splits block is ignored.
    splits {}

    // Instead, use the bundle block to control which types of configuration APKs
    // you want your app bundle to support.
    bundle {
        language {
            // Specifies that the app bundle should not support
            // configuration APKs for language resources. These
            // resources are instead packaged with each base and
            // dynamic feature APK.
            enableSplit = false
        }
        density {
            // This property is set to true by default.
            enableSplit = true
        }
        abi {
            // This property is set to true by default.
            enableSplit = true
        }
    }

    //dynamicFeatures = [":about", ":search", ":settings"]
}

apply from: '../config/apk.gradle'
apply from: '../config/base-feature-signing-config.gradle'
apply from: '../config/kotlin-source-sets.gradle'

dependencies {
    def dependencies = ext.deps

    //region modules
    api project(':core')
    api project(':common')
    implementation project(':network')

    implementation project(':collection')
    implementation project(':categories')
    implementation project(':other')
    implementation project(':favorites')
    //endregion

    //region DI
    implementation dependencies.dagger
    kapt dependencies.daggerCompiler
    //endregion

    //region ANDROID SDK
    api dependencies.appcompat
    api dependencies.material
    api dependencies.constraintlayout
    //endregion

    //region KOTLIN
    api dependencies.kotlin
    //endregion

    implementation dependencies.firebase
    implementation dependencies.crashlytics

    //implementation dependencies.multidex
    api 'com.google.android.play:core:1.3.5'

    //region TEST
    testImplementation dependencies.junit
    androidTestImplementation dependencies.runner
    androidTestImplementation dependencies.espressoCore
    //endregion

    //region LOG
    implementation dependencies.timber
    //endregion
}

apply plugin: 'com.google.gms.google-services'
apply from: "../ktlint.gradle"
apply from: '../jacoco.gradle'
