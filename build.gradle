/*
 * Copyright 2017 Alexey Shtanko
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply from: 'ci.gradle'

buildscript {
    ext.kotlin_version = '1.2.71'
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        maven { url 'https://maven.fabric.io/public' }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.0-alpha13'
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.14.0"
        classpath('com.dicedmelon.gradle:jacoco-android:0.1.2') {
            exclude group: 'org.codehaus.groovy', module: 'groovy-all'
        }
        classpath 'org.codehaus.groovy:groovy-all:2.4.15'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1'
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.2'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5'
        classpath 'org.standardout:gradle-versioneye-plugin:1.5.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.google.gms:google-services:4.0.1'
    }
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://maven.google.com'
        }
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

ext {
    commitsCount = "git rev-list HEAD --first-parent --count".execute().text.toInteger() + 115

    //region VERSION CONSTANTS
    compileSdkVersion = 28
    minSdkVersion = 21
    targetSdkVersion = 28
    appcompatVersion = '1.0.0-rc01'
    retrofitVersion = '2.4.0'
    daggerVersion = '2.17'
    junitVersion = '4.12'
    okHttpVersion = '3.11.0'
    kotlinCoroutinesVersion = '0.22.1'
    kotlin_version = '1.2.60'
    espressoVersion = '3.1.0-alpha4'
    runnerRulesVersion = '1.1.0-alpha3'
    roomVersion = "1.1.1"
    glideVersion = "4.8.0-SNAPSHOT"
    rxjavaVersion = '2.2.2'
    rxandroidVersion = '2.1.0'
    materialVersion = '1.0.0-alpha3'
    hockeyappVersion = '5.1.0'
    constraintlayoutVersion = '1.1.2'
    ktlintVersion = '0.24.0'
    lifecycleVersion = '1.1.1'
    leakCanaryVersion = '1.6.1'
    firebaseVersion = '16.0.3'
    crashlyticsVersion = '2.9.5'
    flexboxVersion = '0.3.2'
    fuelVersion = '1.15.0'
    //endregion

    deps = [
            //region SUPPORT
            appcompat                : "androidx.appcompat:appcompat:${appcompatVersion}",
            constraintlayout         : "androidx.constraintlayout:constraintlayout:${constraintlayoutVersion}",
            lifecycle                : "android.arch.lifecycle:extensions:${lifecycleVersion}",
            lifecycleCompiler        : "android.arch.lifecycle:compiler:${lifecycleVersion}",
            //endregion

            //region GOOGLE
            firebase                 : "com.google.firebase:firebase-core:${firebaseVersion}",
            //endregion

            //region DI
            dagger                   : "com.google.dagger:dagger:${daggerVersion}",
            daggerAndroid            : "com.google.dagger:dagger-android:${daggerVersion}",
            daggerAndroidSupport     : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerCompiler           : "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerAndroidProcessor   : "com.google.dagger:dagger-android-processor:${daggerVersion}",
            javaxAnnotation          : 'javax.annotation:jsr250-api:1.0',
            //endregion

            //region RX
            rxjava                   : "io.reactivex.rxjava2:rxjava:${rxjavaVersion}",
            rxandroid                : "io.reactivex.rxjava2:rxandroid:${rxandroidVersion}",
            //endregion

            //region KOTLIN
            kotlin                   : "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            //endregion

            //region NETWORK/IO
            retrofit                 : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverterGson    : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            okhttp                   : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            gson                     : 'com.google.code.gson:gson:2.8.5',
            adapterRxjava            : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            loggingInterceptor       : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            kotlinCoroutines         : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion",
            kotlinCoroutinesAndroid  : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion",
            moshi                    : 'com.squareup.moshi:moshi:1.6.0',
            retrofitConverterMoshi   : "com.squareup.retrofit2:converter-moshi:${retrofitVersion}",
            fuel                     : "com.github.kittinunf.fuel:fuel:$fuelVersion",
            fuelAndroid              : "com.github.kittinunf.fuel:fuel-android:$fuelVersion",
            fuelLiveData             : "com.github.kittinunf.fuel:fuel-livedata:$fuelVersion",
            fuelRxJava               : "com.github.kittinunf.fuel:fuel-rxjava:$fuelVersion",
            fuelGson                 : "com.github.kittinunf.fuel:fuel-gson:$fuelVersion",
            forge                    : "com.github.kittinunf.forge:forge:0.3.0",
            //endregion

            //region UNIT TESTING
            junit                    : "junit:junit:$junitVersion",
            assertj                  : 'org.assertj:assertj-core:3.8.0',
            mockitoKotlin            : 'com.nhaarman:mockito-kotlin:1.5.0',
            mockitoAndroid           : 'org.mockito:mockito-android:2.15.0',
            mockito                  : 'org.mockito:mockito-core:2.15.0',
            kluent                   : 'org.amshove.kluent:kluent:1.14',
            robolectric              : 'org.robolectric:robolectric:3.8',
            kotlinTest               : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            archCore                 : "android.arch.core:core-testing:1.1.0",
            supportTestOrchestrator  : "com.android.support.test:orchestrator:1.0.2",
            //endregion

            //region ANDROID TESTING
            runner                   : "androidx.test:runner:${runnerRulesVersion}",
            rules                    : "com.android.support.test:rules:${runnerRulesVersion}",
            espressoCore             : "androidx.test.espresso:espresso-core:$espressoVersion",
            espressoContrib          : "com.android.support.test.espresso:espresso-contrib:$espressoVersion",
            espressoIntents          : "com.android.support.test.espresso:espresso-intents:$espressoVersion",
            espressoIdlingConcurrent : "com.android.support.test.espresso.idling:idling-concurrent:$espressoVersion",
            espressoIdlingResource   : "com.android.support.test.espresso:espresso-idling-resource:$espressoVersion",
            //endregion

            // region DB
            roomRuntime              : "android.arch.persistence.room:runtime:$roomVersion",
            roomCompiler             : "android.arch.persistence.room:compiler:$roomVersion",
            roomTesting              : "android.arch.persistence.room:testing:$roomVersion",
            //endregion

            //region IMAGE PROCESSING
            glide                    : "com.github.bumptech.glide:glide:$glideVersion",
            glideCompiler            : "com.github.bumptech.glide:compiler:$glideVersion",
            //endregion
            sonar                    : 'com.facebook.sonar:sonar:0.0.1',

            //region UI
            material                 : "com.google.android.material:material:${materialVersion}",
            flexbox                  : "com.google.android:flexbox:${flexboxVersion}",
            //endregion

            //region OTHER
            ktx                      : 'androidx.core:core-ktx:1.0.0-alpha1',
            hockeyapp                : "net.hockeyapp.android:HockeySDK:${hockeyappVersion}",
            ktlint                   : "com.github.shyiko:ktlint:0.27.0",
            crashlytics              : "com.crashlytics.sdk.android:crashlytics:${crashlyticsVersion}",
            //endregion

            //region memory leak detection
            leakcanary               : "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
            leakcanaryNoOp           : "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
            leakcanarySupportFragment: "com.squareup.leakcanary:leakcanary-support-fragment:${leakCanaryVersion}",
            //endregion

    ]
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task wrapper(type: Wrapper) {
    description 'Creates the gradle wrapper.'
    gradleVersion = '4.10'
}
